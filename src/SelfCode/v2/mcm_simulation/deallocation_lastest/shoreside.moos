//*******************************************************
// ShoreSide Configuration File

ServerHost = localhost
ServerPort = 9000
Community  = shoreside

MOOSTimeWarp = 1
//LatOrigin  = 43.825300 
//LongOrigin = -70.330400 
LatOrigin  = 42.3584
LongOrigin = -71.08745


//--------------------------------------------------------
Processconfig = ANTLER
{
  MSBetweenLaunches = 100

  Run = MOOSDB           @ NewConsole = false
  Run = pMarineViewer    @ NewConsole = false
  Run = pLogger          @ NewConsole = false
  Run = uFldHazardSensor @ NewConsole = false 
  Run = uFldHazardMetric @ NewConsole = false

  Run = pShare           @ NewConsole = false
  Run = pHostInfo        @ NewConsole = false
  Run = uFldShoreBroker  @ NewConsole = false
  Run = uFldNodeComms    @ NewConsole = false

  //14.5.29
  Run = yGlobalInformation    @ NewConsole = true
}

//--------------------------------------------------
// pHostInfo configuration block

ProcessConfig = pHostInfo
{
  AppTick 	= 1
  CommsTick 	= 1

  DEFAULT_HOSTIP = localhost
}


//--------------------------------------------------
// pLogger Configuration Block

ProcessConfig = pLogger
{
  AppTick 	= 5
  CommsTick 	= 5

  File		= LOG_SHORESIDE
  PATH		= ./
  SyncLog 	= true @ 0.2
  AsyncLog 	= true
  FileTimeStamp = true

  Log = IVPHELM_LIFE_EVENT @ 0 nosync

  // Log it all!!!!!
  WildCardLogging = true 
  WildCardOmitPattern = *_STATUS
  LogAuxSrc = true
}


//---------------------------------------------------------
// pShare Config Block

ProcessConfig = pShare
{
  AppTick    = 2
  CommsTick  = 2

  input = route = localhost:9300
  input = route = multicast_9
}


//--------------------------------------------------
// uFldShoreBroker Configuration Block

ProcessConfig = uFldShoreBroker
{
  AppTick       = 1
  CommsTick     = 1

  // Note: [qbridge = FOO]  is shorthand for
  //       [bridge = src=FOO_$V,  alias=FOO] and
  //       [bridge = src=FOO_ALL, alias=FOO]

  qbridge  = DEPLOY, RETURN, NODE_REPORT, NODE_MESSAGE
  qbridge  = MOOS_MANUAL_OVERIDE

  bridge   = src=APPCAST_REQ 
  bridge   = src=UHZ_MISSION_PARAMS
  bridge   = src=UHZ_OPTIONS_SUMMARY

  bridge   = src=UHZ_CONFIG_ACK_$V,       alias=UHZ_CONFIG_ACK
  bridge   = src=UHZ_HAZARD_REPORT_$V,    alias=UHZ_HAZARD_REPORT
  bridge   = src=UHZ_DETECTION_REPORT_$V, alias=UHZ_DETECTION_REPORT
  bridge   = src=HAZARDSET_REQUEST_ALL,   alias=HAZARDSET_REQUEST

  //增加SIM_FAULT,后方的alias是它的别名,但是为什么前三个按钮没有设置alias，在第一句中就默认设置吗？
  //对上方问题的解释：首先，在这个配置块中的信息指的是按下按钮或者是其他的方式所发送的“消息”，对于DEPLOY_ALL和RETURN_ALL消息，是使用
  //qbrige的方式设置了别名DEPLOY和RETURN，见上方的Note注释块。而REQ_REPORT发送的HZAARDSET_REQUEST_ALL在上一行中设置成为了HAZARDSET_REQUEST
  //这个信息会以endflag形式在bhv文件中发送。
  bridge   = src=SIM_FAULT,       alias=FAULT

  //向航行器发送所有航行器位置点信息 14.5.28
  bridge = src=YANG_WPT_CURRENT_INDEX, alias=YANG_WPT_CURRENT_INDEX_YANG
  bridge = src=BETTY_WPT_CURRENT_INDEX, alias=BETTY_WPT_CURRENT_INDEX_BETTY
  bridge = src=ARCHIE_WPT_CURRENT_INDEX, alias=ARCHIE_WPT_CURRENT_INDEX_ARCHIE

}

//--------------------------------------------------
// uFldNodeComms Configuration Block

ProcessConfig = uFldNodeComms
{
  AppTick       = 2
  CommsTick     = 2

  comms_range          = 100
  critical_range       = 25
  min_msg_interval     = 20
  max_msg_length       = 1000
  groups               = true
  view_node_rpt_pulses = true
}

//--------------------------------------------------
// uFldHazardMetric Configuration Block

ProcessConfig = uFldHazardMetric
{
  AppTick   = 4
  CommsTick = 4

  penalty_missed_hazard = 150
  penalty_false_alarm   = 25     
  max_time              = 9000 
  penalty_max_time_over = 300    
  penalty_max_time_rate = 0.5 

  show_xpath    = false

  hazard_file   = hazards.txt

}

//--------------------------------------------------
// uFldHazardSensor Configuration Block

ProcessConfig = uFldHazardSensor
{
  AppTick       = 4
  CommsTick     = 4

  //max_appcast_events = 20
  MAX_APPcAST_EVENTS = 20


//2.27 15:53
  sensor_config = width=30,  exp=5, pclass=0.9, max=1
//  sensor_config = width=30, exp=2, pclass=0.60

  //yhz  注释掉下面三句  14.2.25
  //这个应该是决定传感器测量带长度的配置信息，注释掉下三句，使每个航行器的传感器配置测量长度一致
  //sensor_config = width=10, exp=6, pclass=0.93
  //sensor_config = width=25, exp=4, pclass=0.80
  //sensor_config = width=50, exp=2, pclass=0.60

  swath_length  = 5

  default_hazard_shape = triangle
  default_benign_shape = square

  min_classify_interval = 30
  min_reset_interval    = 100000

  swath_transparency = 0.35
  seed_random        = false

  options_summary_interval = 5

  show_swath=true
  show_hazards=true
  show_reports=30

//由于在转弯时收集的image数据质量很差，所以在HazardSensor这里一般在转弯时就不去处理数据，这也是为什么当航行器速度设置为较大时检测到的
//object较少，这时它的弯转的较大。这里速度设置为5即可，10的话就检测效果较差。
//通过设置下面这个参数（定义的是前两秒的转弯率，默认是超过1.5度/s就关闭传感器），可以调整传感器的关闭阈值
//现将其设置为超过20度/s才关闭。
  max_turn_rate = 40.0


  hazard_file   = hazards.txt
}

//--------------------------------------------------------
ProcessConfig = pMarineViewer
{
  AppTick    = 4
  CommsTick  = 4

  TIFF_FILE            = AerialMIT.tif
  set_pan_x            = -32
  set_pan_y            = 200

  //背景图片缩放比例
  zoom                 = 1.0
  vehicles_shape_scale = 1.5
  vehicles_name_mode   = names+shortmode
  marker_viewable_labels = false

  appcast_width = 30

  appcast_viewable     = true
  appcast_color_scheme = indigo

  SCOPE = HAZARDSET_REPORT

  //ACTION = STATION_ALL = true

  //后方作为点击按钮设置的变量的值
  button_one   = DEPLOY_ALL  # DEPLOY_ALL=true 
  button_one   = MOOS_MANUAL_OVERIDE_ALL=false 
  button_one   = RETURN_ALL=false
  button_one   = HAZARD_SEARCH_START=true
  button_two   = RETURN_ALL  # RETURN_ALL=true

  button_three   = REQ_REPORT  # HAZARDSET_REQUEST_ALL=true

  //新增加按钮
  button_four  = SIM_FAULT  # SIM_FAULT=true
}


